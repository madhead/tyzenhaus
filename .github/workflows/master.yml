name: Master

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy-flyio:
    name: Fly.io deployment
    runs-on: ubuntu-latest
    environment:
      name: fly.io
      url: https://tyzenhaus.fly.dev
    steps:
      - uses: actions/checkout@v3
      - uses: madhead/read-java-properties@latest
        id: project-version
        with:
          file: gradle.properties
          property: version
      - uses: madhead/semver-utils@latest
        id: version
        with:
          version: ${{ steps.project-version.outputs.value }}
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: gradle/wrapper-validation-action@v1
      - uses: gradle/gradle-build-action@v2
        with:
          arguments: clean :launcher:fly:installDist
          cache-read-only: ${{ github.ref != 'refs/heads/master' }}
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v3
        with:
          context: launcher/fly
          push: true
          tags: >
            ghcr.io/${{ github.repository }}:${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }}.${{ steps.version.outputs.patch }},
            ghcr.io/${{ github.repository }}:${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }},
            ghcr.io/${{ github.repository }}:${{ steps.version.outputs.major }},
            ghcr.io/${{ github.repository }}:latest
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: >-
          flyctl deploy
          --app tyzenhaus
          --config launcher/fly/fly.toml
          --image ghcr.io/${{ github.repository }}:${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }}.${{ steps.version.outputs.patch }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      - run: >-
          curl
          -X POST
          https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/setWebhook
          --header "Content-Type: application/json"
          --data '{ "url": "https://tyzenhaus.fly.dev/${{ secrets.TELEGRAM_BOT_TOKEN }}" }'
